name: CI

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 22
        uses: actions/setup-java@v3
        with:
          java-version: '22'
          distribution: 'temurin'
          cache: maven

      - name: Build all modules with Maven
        run: mvn -B install

      - name: Get discovery JAR name
        id: discovery
        run: echo "DISCOVERY_JAR_NAME=$(ls discovery/target/*.jar)" >> $GITHUB_ENV

      - name: Get authentication JAR name
        id: authentication
        run: echo "AUTHENTICATION_JAR_NAME=$(ls authentication/target/*.jar)" >> $GITHUB_ENV

      - name: Get order JAR name
        id: order
        run: echo "ORDER_JAR_NAME=$(ls order/target/*.jar)" >> $GITHUB_ENV

      - name: Get gateway JAR name
        id: gateway
        run: echo "GATEWAY_JAR_NAME=$(ls gateway/target/*.jar)" >> $GITHUB_ENV

      - name: Get user JAR name
        id: user
        run: echo "USER_JAR_NAME=$(ls user/target/*.jar)" >> $GITHUB_ENV

      - name: Get delivery JAR name
        id: delivery
        run: echo "DELIVERY_JAR_NAME=$(ls delivery/target/*.jar)" >> $GITHUB_ENV

      - name: Get product JAR name
        id: product
        run: echo "PRODUCT_JAR_NAME=$(ls product/target/*.jar)" >> $GITHUB_ENV

      - name: Get payment JAR name
        id: payment
        run: echo "PAYMENT_JAR_NAME=$(ls payment/target/*.jar)" >> $GITHUB_ENV

      - name: Build and Push discovery Docker Image
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          context: ./discovery
          file: ./discovery/Dockerfile
          build-args: JAR_FILE=${{ env.DISCOVERY_JAR_NAME }}
          image: mirzaeimahdi409/dish_dash:discovery
          tags: latest
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push authentication Docker Image
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          context: ./authentication
          file: ./authentication/Dockerfile
          build-args: JAR_FILE=${{ env.AUTHENTICATION_JAR_NAME }}
          image: mirzaeimahdi409/dish_dash:authentication
          tags: latest
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push order Docker Image
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          context: ./order
          file: ./order/Dockerfile
          build-args: JAR_FILE=${{ env.ORDER_JAR_NAME }}
          image: mirzaeimahdi409/dish_dash:order
          tags: latest
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push gateway Docker Image
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          context: ./gateway
          file: ./gateway/Dockerfile
          build-args: JAR_FILE=${{ env.GATEWAY_JAR_NAME }}
          image: mirzaeimahdi409/dish_dash:gateway
          tags: latest
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push user Docker Image
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          context: ./user
          file: ./user/Dockerfile
          build-args: JAR_FILE=${{ env.USER_JAR_NAME }}
          image: mirzaeimahdi409/dish_dash:user
          tags: latest
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push delivery Docker Image
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          context: ./delivery
          file: ./delivery/Dockerfile
          build-args: JAR_FILE=${{ env.DELIVERY_JAR_NAME }}
          image: mirzaeimahdi409/dish_dash:delivery
          tags: latest
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push product Docker Image
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          context: ./product
          file: ./product/Dockerfile
          build-args: JAR_FILE=${{ env.PRODUCT_JAR_NAME }}
          image: mirzaeimahdi409/dish_dash:product
          tags: latest
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push payment Docker Image
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          context: ./payment
          file: ./payment/Dockerfile
          build-args: JAR_FILE=${{ env.PAYMENT_JAR_NAME }}
          image: mirzaeimahdi409/dish_dash:payment
          tags: latest
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: copy docker-compose file to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          source: "docker-compose.yaml"
          target: "/root"

      - name: Deploy with SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            cd /root
            docker-compose down
            docker-compose pull
            docker-compose up -d