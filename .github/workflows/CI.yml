name: CI

on:
  push:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build all modules with Maven
        run: mvn -B install

      - name: Get JAR names
        id: get_jars
        run: |
          echo "DISCOVERY_JAR_NAME=$(ls discovery/target/*.jar)" >> $GITHUB_ENV
          echo "AUTHENTICATION_JAR_NAME=$(ls authentication/target/*.jar)" >> $GITHUB_ENV
          echo "ORDER_JAR_NAME=$(ls order/target/*.jar)" >> $GITHUB_ENV
          echo "GATEWAY_JAR_NAME=$(ls gateway/target/*.jar)" >> $GITHUB_ENV
          echo "USER_JAR_NAME=$(ls user/target/*.jar)" >> $GITHUB_ENV
          echo "DELIVERY_JAR_NAME=$(ls delivery/target/*.jar)" >> $GITHUB_ENV
          echo "PRODUCT_JAR_NAME=$(ls product/target/*.jar)" >> $GITHUB_ENV
          echo "PAYMENT_JAR_NAME=$(ls payment/target/*.jar)" >> $GITHUB_ENV

      - name: Build and Push Docker Images
        run: |
          docker buildx build --platform linux/amd64 --build-arg JAR_FILE=${{ env.DISCOVERY_JAR_NAME }} -t mirzaeimahdi409/dish_dash_discovery:latest -f ./discovery/DockerFile ./discovery --push
          docker buildx build --platform linux/amd64 --build-arg JAR_FILE=${{ env.AUTHENTICATION_JAR_NAME }} -t mirzaeimahdi409/dish_dash_authentication:latest -f ./authentication/DockerFile ./authentication --push
          docker buildx build --platform linux/amd64 --build-arg JAR_FILE=${{ env.ORDER_JAR_NAME }} -t mirzaeimahdi409/dish_dash_order:latest -f ./order/DockerFile ./order --push
          docker buildx build --platform linux/amd64 --build-arg JAR_FILE=${{ env.GATEWAY_JAR_NAME }} -t mirzaeimahdi409/dish_dash_gateway:latest -f ./gateway/DockerFile ./gateway --push
          docker buildx build --platform linux/amd64 --build-arg JAR_FILE=${{ env.USER_JAR_NAME }} -t mirzaeimahdi409/dish_dash_user:latest -f ./user/DockerFile ./user --push
          docker buildx build --platform linux/amd64 --build-arg JAR_FILE=${{ env.DELIVERY_JAR_NAME }} -t mirzaeimahdi409/dish_dash_delivery:latest -f ./delivery/DockerFile ./delivery --push
          docker buildx build --platform linux/amd64 --build-arg JAR_FILE=${{ env.PRODUCT_JAR_NAME }} -t mirzaeimahdi409/dish_dash_product:latest -f ./product/DockerFile ./product --push
          docker buildx build --platform linux/amd64 --build-arg JAR_FILE=${{ env.PAYMENT_JAR_NAME }} -t mirzaeimahdi409/dish_dash_payment:latest -f ./payment/DockerFile ./payment --push

      - name: Copy docker-compose.yml to server
        uses: appleboy/scp-action@v0.1.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          source: "docker-compose.yml"
          target: "/root/dish_dash"

      - name: Deploy with SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /root/dish_dash
            docker compose down
            docker compose pull
            docker compose up -d