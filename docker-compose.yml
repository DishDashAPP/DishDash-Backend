version: '3.8'

services:
  #  db:
  #    image: postgres:16.3
  #    container_name: dishdash_postgres
  #    environment:
  #      POSTGRES_USER: dishdash
  #      POSTGRES_PASSWORD: dishdash_pass
  #      POSTGRES_DB: dishdash
  #    ports:
  #      - "5432:5432"
  #    #    volumes:
  #    #      - postgres_data:/var/lib/postgresql/data
  #    #      - ./db_init:/docker-entrypoint-initdb.d
  #    networks:
  #      - dishdash_network
  #
  #networks:
  #  dishdash_network:
  #    driver: bridge
  #
  #volumes:
  #  postgres_data:
  discovery:
    image: mirzaeimahdi409/dish_dash_discovery
    build:
      context: ./discovery
      dockerfile: Dockerfile
    ports:
      - "8971:8971"
    networks:
      - app_network
    restart: always

  authentication:
    image: mirzaeimahdi409/dish_dash_authentication
    build:
      context: ./authentication
      dockerfile: Dockerfile
    networks:
      - app_network
    deploy:
      replicas: 2
    depends_on:
      - discovery
    restart: always

  order:
    image: mirzaeimahdi409/dish_dash_order
    build:
      context: ./order
      dockerfile: Dockerfile
    networks:
      - app_network
    deploy:
      replicas: 2
    depends_on:
      - discovery
    restart: always

  gateway:
    image: mirzaeimahdi409/dish_dash_gateway
    build:
      context: ./gateway
      dockerfile: Dockerfile
    networks:
      - app_network
    deploy:
      replicas: 2
    depends_on:
      - discovery
    restart: always

  user:
    image: mirzaeimahdi409/dish_dash_user
    build:
      context: ./user
      dockerfile: Dockerfile
    networks:
      - app_network
    deploy:
      replicas: 2
    depends_on:
      - discovery
    restart: always

  delivery:
    image: mirzaeimahdi409/dish_dash_delivery
    build:
      context: ./delivery
      dockerfile: Dockerfile
    networks:
      - app_network
    deploy:
      replicas: 2
    depends_on:
      - discovery
    restart: always

  product:
    image: mirzaeimahdi409/dish_dash_product
    build:
      context: ./product
      dockerfile: Dockerfile
    networks:
      - app_network
    deploy:
      replicas: 2
    depends_on:
      - discovery
    restart: always

  #  redis:
  #    image: redis:latest
  #    ports:
  #      - "6379:6379"
  #    volumes:
  #      - redis-data:/data

  payment:
    image: mirzaeimahdi409/dish_dash_payment
    build:
      context: ./payment
      dockerfile: Dockerfile
    networks:
      - app_network
    deploy:
      replicas: 2
    depends_on:
      - discovery
    restart: always

networks:
  app_network:
    driver: bridge

#  redis-data:
